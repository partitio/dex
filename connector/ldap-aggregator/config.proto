syntax = "proto3";

package ldap_aggregator;

option go_package = "ldapaggregator";

import "github.com/infobloxopen/protoc-gen-gorm/options/gorm.proto";
import "validate/validate.proto";



message LdapConfig {
    option(gorm.opts) = {
      ormable: true,
      include: [
        {type: "[]byte", name: "BindPW"}
      ]
    };
    // The id is the host ...
    string id = 14;
    // The host and optional port of the LDAP server. If port isn't supplied, it will be
    // guessed based on the TLS configuration. 389 or 636.
    string host = 1;

    // Required if LDAP host does not use TLS.
    bool insecureNoSSL = 2;

    // Don't verify the CA.
    bool insecureSkipVerify = 3;

    // Connect to the insecure port then issue a StartTLS command to negotiate a
    // secure connection. If unsupplied secure connections will use the LDAPS
    // protocol.
    bool startTLS = 4;

    // Trusted root certificate file.
    string rootCA = 5;

    // Path to a client cert file generated by rootCA.
    string clientCert = 6;

    // Path to a client private key file generated by rootCA.
    string clientKey = 7;

    // Base64 encoded PEM data containing root CAs.
    bytes rootCAData = 8;

    // BindDN and BindPW for an application service account. The connector uses these
    // credentials to search for users and groups.
    string bindDN = 9 [(validate.rules).string.min_len = 3];
    string bindPW = 10 [(gorm.field).drop = true, (validate.rules).string.min_len = 3];

    // UsernamePrompt allows users to override the username attribute (displayed
    // in the username/password prompt). If unset, the handler will use
    // "Username".
    string usernamePrompt = 11;

	UserSearch userSearch = 12 [(gorm.field).tag = {embedded: true, embedded_prefix: "user_search_", foreignkey: "-", association_foreignkey: "-"}, (validate.rules).message.required = true];

	GroupSearch groupSearch = 13 [(gorm.field).tag = {embedded: true, embedded_prefix: "group_search_", foreignkey: "-", association_foreignkey: "-"}, (validate.rules).message.required = true];
}

// User entry search configuration.
message UserSearch {
    option(gorm.opts).ormable = true;
    // BaseDN to start the search from. For example "cn=users,dc=example,dc=com"
    string baseDN = 1 [(validate.rules).string.min_len = 2];

    // Optional filter to apply when searching the directory. For example "(objectClass=person)"
    string filter = 2;

    // Attribute to match against the inputted username. This will be translated and combined
    // with the other filter as "(<attr>=<username>)".
    string username = 3;

    // Can either be:
    // * "sub" - search the whole sub tree
    // * "one" - only search one level
    string scope = 4 [(validate.rules).string = {in: ["", "sub", "one"]}];

    // A mapping of attributes on the user entry to claims.
    string idAttr = 5; // Defaults to "uid"
    string emailAttr = 6; // Defaults to "mail"
    string nameAttr = 7; // No default.

    // If this is set, the email claim of the id token will be constructed from the idAttr and
    // value of emailSuffix. This should not include the @ character.
    string emailSuffix = 8; // No default.
}

// Group search configuration.
message GroupSearch {
    option(gorm.opts).ormable = true;
    // BaseDN to start the search from. For example "cn=groups,dc=example,dc=com"
    string baseDN = 1;

    // Optional filter to apply when searching the directory. For example "(objectClass=posixGroup)"
    string filter = 2;

    string scope = 3[(validate.rules).string = {in: ["", "sub", "one"]}]; // Defaults to "sub"

    // These two fields are use to match a user to a group.
    //
    // It adds an additional requirement to the filter that an attribute in the group
    // match the user's attribute value. For example that the "members" attribute of
    // a group matches the "uid" of the user. The exact filter being added is:
    //
    //   (<groupAttr>=<userAttr value>)
    //
    string userAttr = 4;
    string groupAttr = 5;

    // The attribute of the group that represents its name.
    string nameAttr = 6;
}
